# pip install pillow tensorflow-cpu

import base64
from io import BytesIO
from pathlib import Path
import numpy as np
from PIL import Image
import tensorflow as tf
from tensorflow.keras import models
from tensorflow.keras.preprocessing.image import img_to_array
from tensorflow.keras.saving import register_keras_serializable


IMAGE_WIDTH = 150
IMAGE_HEIGHT = 40
COLOR_MODE = "rgba"  # (RGBA) = RGB colors + Alpha-channel
CAPTCHA_CHARS = "0123456789"  # Possible characters
CAPTCHA_LENGTH = 5  # 5 chars (digits) in captcha


# Register custom function for model Lambda layer
@register_keras_serializable()
def trim_output(x):
    return x[:, :CAPTCHA_LENGTH, :]


# Load keras model
model_path = Path("keras_model/model_20250223.keras")
model = models.load_model(model_path)


def captcha_base64_to_text(image_base64: str, model: models.Model = model) -> str:
    image_array = pre_process_image_base64(image_base64)
    # Предсказание модели
    predictions = predict_single_image(image_array, model)
    # Индексы наиболее вероятных символов
    predicted_labels = np.argmax(predictions, axis=-1)
    # Словарь для преобразования индексов в символы
    index_to_char = {idx: char for idx, char in enumerate(CAPTCHA_CHARS)}
    # Преобразование в строку
    captcha_text = "".join([index_to_char[idx] for idx in predicted_labels[0]])
    return captcha_text


def pre_process_image_base64(image_base64: str) -> np.ndarray:
    image_bytes = base64.b64decode(image_base64)
    image = Image.open(BytesIO(image_bytes))
    image = image.resize((IMAGE_WIDTH, IMAGE_HEIGHT))
    # Преобразуем изображение в массив и нормализуем
    image_array = img_to_array(image) / 255.0
    # Добавляем размерность батча
    return np.expand_dims(image_array, axis=0)


@tf.function(reduce_retracing=True)
def predict_single_image(image_array, model):
    # Преобразуем входные данные в тензор TensorFlow
    image_tensor = tf.convert_to_tensor(image_array, dtype=tf.float32)
    return model(image_tensor, training=False)


def main():
    ## 69520
    # image_base64 = "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"
    ## 41107
    image_base64 = "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"

    captcha_text = captcha_base64_to_text(image_base64)
    print(captcha_text)


if __name__ == "__main__":
    main()
